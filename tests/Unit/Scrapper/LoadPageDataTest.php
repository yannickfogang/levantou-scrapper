<?php

namespace Scrapper;

use Module\Infrastructure\Scrapper\Curl;
use Module\Infrastructure\Scrapper\ScrapperWebScrappingApi;
use Tests\TestCase;

class LoadPageDataTest extends TestCase
{
    private string $url;
    private ScrapperWebScrappingApi $scrapperApi;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->url = 'https://www.amazon.co.uk/dp/B07NQF38K4';
        $curl = new Curl();
        $this->scrapperApi = new ScrapperWebScrappingApi($curl);
    }

    public function test_can_load_page_to_extract_data()
    {
        $filePath = null;
        try {
            $filePath = $this->scrapperApi->loadPage($this->url, 'gb');
        } catch (\Exception $e) {
            $content = $e;
        }
        $this->assertFileExists($filePath);
    }

    public function test_extract_content() {
        $basePath = base_path() . '/scrapper/work/page.html';
        $contentParse = $this->scrapperApi->extractContent($basePath);
        $this->assertTrue($contentParse);
    }

}
